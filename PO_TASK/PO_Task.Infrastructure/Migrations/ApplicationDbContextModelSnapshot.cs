// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PO_Task.Infrastructure;

#nullable disable

namespace PO_Task.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PO_Task.Domain.PurchaseOrders.PurchaseOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("deleted_at");

                    b.Property<bool>("IsDeactivated")
                        .HasColumnType("bit")
                        .HasColumnName("is_deactivated");

                    b.Property<string>("PoNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("po_number");

                    b.HasKey("Id")
                        .HasName("pk_purchase_orders");

                    b.HasIndex("PoNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_purchase_orders_po_number");

                    b.ToTable("PurchaseOrders", "PO");
                });

            modelBuilder.Entity("PO_Task.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_user_profile");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_user_profile_id");

                    b.ToTable("user_profile", (string)null);
                });

            modelBuilder.Entity("PO_Task.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccurredOnUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("occurred_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.ToTable("outbox_messages", (string)null);
                });

            modelBuilder.Entity("PO_Task.Domain.PurchaseOrders.PurchaseOrder", b =>
                {
                    b.OwnsMany("PO_Task.Domain.Items.PurchaseOrderItem", "PurchaseOrderItems", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("id");

                            b1.Property<string>("GoodCode")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("good_code");

                            b1.Property<Guid>("PurchaseOrderId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("purchase_order_id");

                            b1.Property<decimal>("Quantity")
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("quantity");

                            b1.Property<int>("SerialNumber")
                                .HasColumnType("int")
                                .HasColumnName("serial_number");

                            b1.HasKey("Id")
                                .HasName("pk_order_items");

                            b1.HasIndex("PurchaseOrderId")
                                .HasDatabaseName("ix_order_items_purchase_order_id");

                            b1.ToTable("OrderItems", "PO");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseOrderId")
                                .HasConstraintName("fk_order_items_purchase_orders_purchase_order_id");

                            b1.OwnsOne("PO_Task.Domain.Common.Money", "Price", b2 =>
                                {
                                    b2.Property<Guid>("PurchaseOrderItemId")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("id");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("price_amount");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("nvarchar(3)")
                                        .HasColumnName("price_currency");

                                    b2.HasKey("PurchaseOrderItemId");

                                    b2.ToTable("OrderItems", "PO");

                                    b2.WithOwner()
                                        .HasForeignKey("PurchaseOrderItemId")
                                        .HasConstraintName("fk_order_items_order_items_id");
                                });

                            b1.Navigation("Price")
                                .IsRequired();
                        });

                    b.OwnsOne("PO_Task.Domain.Common.Money", "TotalAmount", b1 =>
                        {
                            b1.Property<Guid>("PurchaseOrderId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("id");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("total_amount_amount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("total_amount_currency");

                            b1.HasKey("PurchaseOrderId");

                            b1.ToTable("PurchaseOrders", "PO");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseOrderId")
                                .HasConstraintName("fk_purchase_orders_purchase_orders_id");
                        });

                    b.OwnsOne("PO_Task.Domain.PurchaseOrders.PurchaseOrderStatus", "Status", b1 =>
                        {
                            b1.Property<Guid>("PurchaseOrderId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("id");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasColumnType("nvarchar(max)")
                                .HasDefaultValue("Created")
                                .HasColumnName("status_name");

                            b1.Property<int>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(110)
                                .HasColumnName("status_value");

                            b1.HasKey("PurchaseOrderId");

                            b1.ToTable("PurchaseOrders", "PO");

                            b1.WithOwner()
                                .HasForeignKey("PurchaseOrderId")
                                .HasConstraintName("fk_purchase_orders_purchase_orders_id");
                        });

                    b.Navigation("PurchaseOrderItems");

                    b.Navigation("Status")
                        .IsRequired();

                    b.Navigation("TotalAmount")
                        .IsRequired();
                });

            modelBuilder.Entity("PO_Task.Domain.Users.User", b =>
                {
                    b.OwnsOne("PO_Task.Domain.Users.UserProfile", "Profile", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("id");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(400)
                                .HasColumnType("nvarchar(400)")
                                .HasColumnName("profile_email");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("profile_first_name");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("profile_last_name");

                            b1.HasKey("UserId")
                                .HasName("pk_user_profile");

                            b1.HasIndex("Email")
                                .IsUnique()
                                .HasDatabaseName("ix_user_profile_profile_email");

                            b1.ToTable("user_profile", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId")
                                .HasConstraintName("fk_user_profile_user_profile_id");
                        });

                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
